#!/bin/sh

###############
# global vars #
###############

# hosts file to write 
HOSTS_FILE="/etc/hosts.d/arithmetic-server.hosts"
# Testing .... HOSTS_FILE="/tmp/arithmetic-server.hosts"

# List of servers aliases to write (comma separated)
# TODO: revise list ...
SRV_ALIASES="server,srv,servidor,fs,mirror,lliurex-mirror,cups,www,ntp,share,jclic-aula,lliurexlab,error,ipxboot,admin-center"

# get default route iface
GW_IFACE="$(get_gw_iface)"

# load common functions
. /usr/share/natfree-common/natfree-common

usage(){
        die "Usage" "$(basename "$0") [options]" \
            "       options:" \
            "           -a            : automagic detection/default parameters" \
            "           -n NUMBER     : IP number/position in subnet" \
            "           -i PHYS_IFACE : physical interface name (defaults to $GW_IFACE)"
}

#############
# functions #
#############
main(){
	# check parameters
        [ "$1" ] || usage

        while [ "$1" ] ; do
                case "$1" in
                        -n)
                                shift
                                SRV_IP_NUMBER="$1"
                                ;;
                        -i)
                                shift
                                GW_IFACE="$1"
                                ;;
                        -a)
                                # use default
                                ;;
                        *)
                                usage
                                ;;
                esac
		# validate
                echo "$SRV_IP_NUMBER" |grep -q "^[[:digit:]]\+$" || die "Invalid IP number/position $SRV_IP_NUMBER"
                [ "$GW_IFACE" ] || die "Undefined physical interface"
                get_interface_list | grep -qFX "$GW_IFACE" || die "Invalid physical interface $GW_IFACE"

                shift
        done


	# recopile necessary data

	# get DNS search domain from resolv.conf (if any)
	SEARCH_DOMAIN="$(get_domain)"
	[ -z "$SEARCH_DOMAIN" ] || SEARCH_DOMAIN=":${SEARCH_DOMAIN}"

	# get ip/mask in CIDR notation
	CIDR="$(get_iface_cidr "$GW_IFACE")"
	[ "$CIDR" ] || die "Unable to retrieve IP address from $GW_IFACE"

	# get SRV_IP_NUMBER available ip in subnet
	SRV_IP="$(get_srv_ip "$CIDR" "$SRV_IP_NUMBER")"

	# generate .hosts file
	echo "# BEGIN arithmetic-server IPs" > "$HOSTS_FILE"
	generate_hosts "${SRV_IP}:${SRV_ALIASES}${SEARCH_DOMAIN}" >> "$HOSTS_FILE"
	echo "# END arithmetic-server IPs" >> "$HOSTS_FILE"

	# update /etc/hosts
	update-hosts
}

################
# main program #
################
main "$@"
exit 0

